---
name: "Security"
on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - "!dependabot/*"
      - "main"
  pull_request:
    branches: ["*"]
  merge_group:
    types:
      - "checks_requested"
jobs:

  codeql:
    name: "CodeQL Analyze"
    # Runner size impacts CodeQL analysis time. To learn more, please see:
    #   - https://gh.io/recommended-hardware-resources-for-running-codeql
    #   - https://gh.io/supported-runners-and-hardware-resources
    #   - https://gh.io/using-larger-runners
    # Consider using larger runners for possible analysis time improvements.
    runs-on: "buildjet-8vcpu-ubuntu-2204"
    timeout-minutes: "${{ (matrix.language == 'swift' && 120) || 360 }}"
    permissions:
      # required for all workflows
      security-events: "write"

      # only required for workflows in private repositories
      actions: "read"
      contents: "read"

    strategy:
      fail-fast: false
      matrix:
        language: ["go"]
        # CodeQL supports [ 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift' ]
        # Use only 'java-kotlin' to analyze code written in Java, Kotlin or both
        # Use only 'javascript-typescript' to analyze code written in JavaScript, TypeScript or both
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v4"

      # Uses centralized Go toolchain version.
      - uses: "authzed/actions/setup-go@main"

      # Initializes the CodeQL tools for scanning.
      - name: "Initialize CodeQL"
        uses: "github/codeql-action/init@v3"
        with:
          languages: "${{ matrix.language }}"
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.

          # For more details on CodeQL's query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
          # queries: security-extended,security-and-quality


      # Autobuild attempts to build any compiled languages (C/C++, C#, Go, Java, or Swift).
      # If this step fails, then you should remove it and run the build manually (see below)
      - name: "Autobuild"
        uses: "github/codeql-action/autobuild@v3"

      # ℹ️ Command-line programs to run using the OS shell.
      # 📚 See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

      #   If the Autobuild fails above, remove it and uncomment the following three lines.
      #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

      # - run: |
      #     echo "Run, Build Application using script"
      #     ./location_of_script_within_repo/buildscript.sh

      - name: "Perform CodeQL Analysis"
        uses: "github/codeql-action/analyze@v3"
        with:
          category: "/language:${{matrix.language}}"

  trivy:
    name: "Analyze Code and Docker Image with Trivvy"
    runs-on: "buildjet-2vcpu-ubuntu-2204"
    steps:
      - uses: "actions/checkout@v3"
      - uses: "authzed/actions/setup-go@main"
      - uses: "aquasecurity/trivy-action@master"
        with:
          scan-type: "fs"
          ignore-unfixed: true
          format: "table"
          exit-code: "1"
          severity: "CRITICAL,HIGH,MEDIUM"
      # Workaround until goreleaser release supports --single-target
      # makes the build faster by not building everything
      - name: "modify goreleaser config to skip building all targets"
        run: |
          echo "partial:
            by: target" >> .goreleaser.yml
      - uses: "goreleaser/goreleaser-action@v4"
        id: "goreleaser"
        with:
          distribution: "goreleaser-pro"
          version: "latest"
          args: "release --clean --split --snapshot"
        env:
          GORELEASER_KEY: "${{ secrets.GORELEASER_KEY }}"
      - name: "Obtain container image to scan"
        run: 'echo "IMAGE_VERSION=$(jq .version dist/linux_amd64/metadata.json --raw-output)" >> $GITHUB_ENV'
      - name: "run trivy on release image"
        run: "docker run -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image --format table --exit-code 1 --ignore-unfixed --vuln-type os,library --no-progress --severity CRITICAL,HIGH,MEDIUM authzed/spicedb:v${{ env.IMAGE_VERSION }}-amd64"
